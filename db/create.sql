-- Feel free to modify this file to match your development goal.
-- Here we only create 3 tables for demo purpose.

CREATE TABLE Users (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL
);

CREATE TABLE Products (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(255) UNIQUE NOT NULL,
    price DECIMAL(12,2) NOT NULL,
    available BOOLEAN DEFAULT TRUE
);

CREATE TABLE Purchases (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    uid INT NOT NULL REFERENCES Users(id),
    pid INT NOT NULL REFERENCES Products(id),
    time_purchased timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC')
);

CREATE TABLE Wishes (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    uid INT NOT NULL REFERENCES Users(id),
    pid INT NOT NULL REFERENCES Products(id),
    time_added timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC')
);

/* MILESTONE 3 */
CREATE TABLE UserReviewsProduct (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id INT NOT NULL REFERENCES Users(id),
    product_id INT NOT NULL REFERENCES Products(id),
    rating_num INT CHECK (rating_num >= 1 AND rating_num <= 5), -- rating between 1 and 5
    rating_message TEXT,
    review_date TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC')
);

CREATE TABLE UserReviewsSeller (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id INT NOT NULL REFERENCES Users(id),
    seller_id INT NOT NULL REFERENCES Users(id), -- assuming sellers are users
    rating_num INT CHECK (rating_num >= 1 AND rating_num <= 5), -- rating between 1 and 5
    rating_message TEXT,
    review_date TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC')
);
CREATE TABLE Messages (
    msg_num SERIAL PRIMARY KEY,  -- Unique message ID
    customer_ID INT REFERENCES Users(id),  -- User who sent the message
    seller_ID INT REFERENCES Users(id),  -- Seller who received the message
    product_ID INT REFERENCES Products(id),  -- Product related to the message
    message TEXT NOT NULL,  -- The actual message
    message_date TIMESTAMP DEFAULT current_timestamp  -- Date of the message
);


-- Table for Seller
CREATE TABLE Seller (
    acct_ID INT NOT NULL,
    product_ID INT NOT NULL,
    PRIMARY KEY (acct_ID, product_ID),
    FOREIGN KEY (acct_ID) REFERENCES Users(acct_ID),
    FOREIGN KEY (product_ID) REFERENCES Products(product_ID)
);

-- Table for Inventory
CREATE TABLE Inventory (
    acct_ID INT NOT NULL,
    product_ID INT NOT NULL,
    available_quantity INT DEFAULT 0,
    PRIMARY KEY (acct_ID, product_ID),
    FOREIGN KEY (acct_ID) REFERENCES Users(acct_ID),
    FOREIGN KEY (product_ID) REFERENCES Products(product_ID)
);

-- Table for Cart
CREATE TABLE Cart (
    cart_ID INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    acct_ID INT NOT NULL REFERENCES Users(acct_ID),
    total_cost DECIMAL(12, 2) DEFAULT 0.00
);

-- Table for CartItem
CREATE TABLE CartItem (
    cart_item_ID INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    cart_ID INT NOT NULL REFERENCES Cart(cart_ID),
    product_ID INT NOT NULL REFERENCES Products(product_ID),
    seller_ID INT NOT NULL REFERENCES Seller(acct_ID),
    quantity INT DEFAULT 1,
    item_price DECIMAL(12, 2) NOT NULL
);

-- Table for Orders
CREATE TABLE Orders (
    order_ID INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    acct_ID INT NOT NULL REFERENCES Users(acct_ID),
    total_cost DECIMAL(12, 2) DEFAULT 0.00,
    order_date TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
    order_status VARCHAR(50) DEFAULT 'Pending'
);

-- Table for OrderItem
CREATE TABLE OrderItem (
    order_item_ID INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    order_ID INT NOT NULL REFERENCES Orders(order_ID),
    product_ID INT NOT NULL REFERENCES Products(product_ID),
    seller_ID INT NOT NULL REFERENCES Seller(acct_ID),
    order_item_status VARCHAR(50) DEFAULT 'Processing'
);

-- Table for Products
CREATE TABLE Products (
    product_ID INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(255) UNIQUE NOT NULL,
    description TEXT,
    image VARCHAR(255),
    price DECIMAL(12, 2) NOT NULL,
    category VARCHAR(50),
    rating DECIMAL(2, 1) DEFAULT 0.0,
    link VARCHAR(255)
);

-- Table for UserReviewsProduct
CREATE TABLE UserReviewsProduct (
    customer_ID INT NOT NULL REFERENCES Users(acct_ID),
    product_ID INT NOT NULL REFERENCES Products(product_ID),
    rating_num INT CHECK (rating_num BETWEEN 1 AND 5),
    rating_message TEXT,
    review_date TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
    PRIMARY KEY (customer_ID, product_ID)
);

-- Table for UserReviewsSeller
CREATE TABLE UserReviewsSeller (
    customer_ID INT NOT NULL REFERENCES Users(acct_ID),
    seller_ID INT NOT NULL REFERENCES Seller(acct_ID),
    rating_num INT CHECK (rating_num BETWEEN 1 AND 5),
    rating_message TEXT,
    review_date TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
    PRIMARY KEY (customer_ID, seller_ID)
);

-- Table for UserSendsMessage
CREATE TABLE UserSendsMessage (
    customer_ID INT NOT NULL REFERENCES Users(acct_ID),
    seller_ID INT NOT NULL REFERENCES Seller(acct_ID),
    PRIMARY KEY (customer_ID, seller_ID)
);

-- Table for Message
CREATE TABLE Message (
    msg_num INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_ID INT NOT NULL REFERENCES Users(acct_ID),
    seller_ID INT NOT NULL REFERENCES Seller(acct_ID),
    message TEXT NOT NULL,
    message_date TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
    product INT REFERENCES Products(product_ID)
);
